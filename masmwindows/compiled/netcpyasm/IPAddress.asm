; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

EXTRN	__imp_getaddrinfo:PROC
EXTRN	__imp_inet_ntop:PROC
EXTRN	__imp_freeaddrinfo:PROC
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?getString@IPAddress@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; IPAddress::getString
PUBLIC	?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; IPAddress::resolveHostName
PUBLIC	??1IPAddress@@QEAA@XZ				; IPAddress::~IPAddress
PUBLIC	??0IPAddress@@QEAA@XZ				; IPAddress::IPAddress
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getString@IPAddress@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD imagerel $LN26
	DD	imagerel $LN26+143
	DD	imagerel $unwind$?getString@IPAddress@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN18
	DD	imagerel $LN18+116
	DD	imagerel $unwind$?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN18+116
	DD	imagerel $LN18+165
	DD	imagerel $chain$0$?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN18+165
	DD	imagerel $LN18+186
	DD	imagerel $chain$1$?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 021H
	DD	imagerel $LN18
	DD	imagerel $LN18+116
	DD	imagerel $unwind$?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 020521H
	DD	066805H
	DD	imagerel $LN18
	DD	imagerel $LN18+116
	DD	imagerel $unwind$?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 021519H
	DD	03002d206H
	DD	imagerel __GSHandlerCheck
	DD	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getString@IPAddress@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 021519H
	DD	030027206H
	DD	imagerel __GSHandlerCheck
	DD	038H
; Function compile flags: /Ogtpy
;	COMDAT ??0IPAddress@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IPAddress@@QEAA@XZ PROC				; IPAddress::IPAddress, COMDAT
; File D:\Dev\GitHub\vtools\netcpy\Network\IPAddress.cpp
; Line 51
	mov	DWORD PTR [rcx], 0
; Line 52
	mov	rax, rcx
	ret	0
??0IPAddress@@QEAA@XZ ENDP				; IPAddress::IPAddress
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1IPAddress@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1IPAddress@@QEAA@XZ PROC				; IPAddress::~IPAddress, COMDAT
; File D:\Dev\GitHub\vtools\netcpy\Network\IPAddress.cpp
; Line 68
	mov	DWORD PTR [rcx], 0
; Line 69
	ret	0
??1IPAddress@@QEAA@XZ ENDP				; IPAddress::~IPAddress
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
result$ = 32
hints$ = 40
__$ArrayPad$ = 88
this$ = 128
hostName$ = 136
?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; IPAddress::resolveHostName, COMDAT
; File D:\Dev\GitHub\vtools\netcpy\Network\IPAddress.cpp
; Line 76
$LN18:
	push	rbx
	sub	rsp, 112				; 00000070H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 78
	movdqa	xmm0, XMMWORD PTR __xmm@00000000000000000000000200000000
	mov	rbx, rcx
; Line 82
	xor	ecx, ecx
	mov	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; Line 2244
	cmp	QWORD PTR [rdx+24], 16
; File D:\Dev\GitHub\vtools\netcpy\Network\IPAddress.cpp
; Line 78
	movdqu	XMMWORD PTR hints$[rsp], xmm0
; Line 82
	mov	QWORD PTR hints$[rsp+16], rcx
	xorps	xmm0, xmm0
; Line 85
	mov	QWORD PTR hints$[rsp+40], rcx
	movdqu	XMMWORD PTR hints$[rsp+24], xmm0
; Line 88
	mov	QWORD PTR result$[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; Line 2236
	jb	SHORT $LN8@resolveHos
; Line 2237
	mov	rax, QWORD PTR [rdx]
$LN8@resolveHos:
; File D:\Dev\GitHub\vtools\netcpy\Network\IPAddress.cpp
; Line 89
	lea	r9, QWORD PTR result$[rsp]
	xor	edx, edx
	lea	r8, QWORD PTR hints$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_getaddrinfo
	test	eax, eax
	jne	SHORT $LN12@resolveHos
; Line 94
	mov	rcx, QWORD PTR result$[rsp]
	test	rcx, rcx
	je	SHORT $LN12@resolveHos
; Line 113
	mov	rax, QWORD PTR [rcx+32]
	movaps	XMMWORD PTR [rsp+96], xmm6
	movups	xmm6, XMMWORD PTR [rax]
; Line 114
	call	QWORD PTR __imp_freeaddrinfo
; Line 117
	psrldq	xmm6, 4
; Line 120
	mov	al, 1
	movd	DWORD PTR [rbx], xmm6
	movaps	xmm6, XMMWORD PTR [rsp+96]
; Line 121
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 112				; 00000070H
	pop	rbx
	ret	0
$LN12@resolveHos:
; Line 97
	xor	al, al
; Line 121
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 112				; 00000070H
	pop	rbx
	ret	0
?resolveHostName@IPAddress@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; IPAddress::resolveHostName
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?getString@IPAddress@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
cstraddress$ = 32
__$ArrayPad$ = 56
this$ = 80
__$ReturnUdt$ = 88
?getString@IPAddress@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; IPAddress::getString, COMDAT
; File D:\Dev\GitHub\vtools\netcpy\Network\IPAddress.cpp
; Line 128
$LN26:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 129
	xor	eax, eax
; Line 131
	lea	r8, QWORD PTR cstraddress$[rsp]
	xorps	xmm0, xmm0
	mov	DWORD PTR cstraddress$[rsp+16], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; Line 2284
	movups	XMMWORD PTR [rdx], xmm0
; Line 4821
	mov	QWORD PTR [rdx+16], rax
; File D:\Dev\GitHub\vtools\netcpy\Network\IPAddress.cpp
; Line 128
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; Line 4822
	mov	QWORD PTR [rdx+24], 15
; File D:\Dev\GitHub\vtools\netcpy\Network\IPAddress.cpp
; Line 131
	lea	r9d, QWORD PTR [rax+22]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; Line 4826
	mov	BYTE PTR [rdx], al
; File D:\Dev\GitHub\vtools\netcpy\Network\IPAddress.cpp
; Line 131
	mov	rdx, rcx
	lea	ecx, QWORD PTR [rax+2]
	mov	WORD PTR cstraddress$[rsp+20], ax
	movups	XMMWORD PTR cstraddress$[rsp], xmm0
	call	QWORD PTR __imp_inet_ntop
	test	rax, rax
	je	SHORT $LN21@getString
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; Line 400
	lea	rax, QWORD PTR cstraddress$[rsp]
	mov	r8, -1
$LL20@getString:
	inc	r8
	cmp	BYTE PTR [rax+r8], 0
	jne	SHORT $LL20@getString
; Line 3395
	lea	rdx, QWORD PTR cstraddress$[rsp]
	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN21@getString:
; File D:\Dev\GitHub\vtools\netcpy\Network\IPAddress.cpp
; Line 137
	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?getString@IPAddress@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; IPAddress::getString
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; Line 400
	mov	r8, -1
	npad	9
$LL7@operator:
	inc	r8
	cmp	BYTE PTR [rdx+r8], 0
	jne	SHORT $LL7@operator
; Line 3395
	jmp	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; Line 400
	mov	r8, -1
	npad	9
$LL5@assign:
	inc	r8
	cmp	BYTE PTR [rdx+r8], 0
	jne	SHORT $LL5@assign
; Line 3395
	jmp	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
END
